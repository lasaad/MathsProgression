<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MImETCL/2Q==
</value>
  </data>
</root>